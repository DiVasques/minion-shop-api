# NOTE: update this with your service name
service: minion-shop-app-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    tableName: shopUsers
  #  sampleEnvVar: ${env:SAMPLE_ENV_VAR}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:*:*"


functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
  
  create:
    handler: create.main
    events:
      - http:
          path: shopUsers
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: get.main
    events:
      - http:
          path: shopUsers/{id}
          method: get
          cors: true
          authorizer: aws_iam
  
  getHistory:
    handler: getHistory.main
    events:
      - http:
          path: shopUsers/{id}
          method: get
          cors: true
          authorizer: aws_iam
  
  getCart:
    handler: getCart.main
    events:
      - http:
          path: shopUsers/{id}
          method: get
          cors: true
          authorizer: aws_iam
  
  getEmail:
    handler: getEmail.main
    events:
      - http:
          path: shopUsers/{id}
          method: get
          cors: true
          authorizer: aws_iam
  
  updateHistory:
    handler: updateHistory.main
    events:
      - http:
          path: shopUsers/{id}
          method: put
          cors: true
          authorizer: aws_iam
          
  dumpCart:
    handler: dumpCart.main
    events:
      - http:
          path: shopUsers/{id}
          method: put
          cors: true
          authorizer: aws_iam
  
  addOnCart:
    handler: addOnCart.main
    events:
      - http:
          path: shopUsers/{id}
          method: put
          cors: true
          authorizer: aws_iam
  
  updateCart:
    handler: updateCart.main
    events:
      - http:
          path: shopUsers/{id}
          method: put
          cors: true
          authorizer: aws_iam
          
  removeCartItem:
    handler: removeCartItem.main
    events:
      - http:
          path: shopUsers/{id}
          method: put
          cors: true
          authorizer: aws_iam
  
  purchase:
    handler: purchase.main
    events:
      - http:
          path: shopUsers/{id}
          method: put
          cors: true
          authorizer: aws_iam